//! This module contains an implementation of the approximation of the secondary
//! branch of the Lambert W function
//! with 24 bits of accuracy from Fukushima's paper.
//! It returns [`f32::NAN`] if the input is smaller than -1/e, is `NAN`, or is larger than or equal to 0.

use crate::generic_math::{ln, rational_function, sqrt};

const INV_SQRT_E: f32 = super::INV_SQRT_E as f32;
const NEG_INV_E: f32 = super::NEG_INV_E as f32;

#[inline(always)]
#[cfg_attr(all(test, assert_no_panic), no_panic::no_panic)]
pub fn swm1f(z: f32) -> f32 {
    if z < NEG_INV_E {
        f32::NAN
    } else if z <= -0.20729377764038413899 {
        // W >= -2.483, Y_-1

        rational_function(
            -z / (INV_SQRT_E + sqrt(z - NEG_INV_E)),
            [
                -6.3837228228019056402,
                -74.968653259594050421,
                -19.714821552432482711,
                70.677326667809236886,
            ],
            [
                1.0,
                24.295836951878692244,
                64.112460611386039710,
                17.994497369039313585,
            ],
        )
    } else if z <= -0.071507705083841949275 {
        // W >= -4.032, Y_-2

        rational_function(
            -z / (INV_SQRT_E + sqrt(z - NEG_INV_E)),
            [
                -7.7233284812299780445,
                -352.48469097042914866,
                -1242.0088903685677154,
                1171.6475960620499033,
            ],
            [
                1.0,
                77.681242588997413555,
                648.56431214075246023,
                566.70154976436164818,
            ],
        )
    } else if z <= -0.020704412621717479786 {
        // W >= -5.600, Y_-3

        rational_function(
            -z / (INV_SQRT_E + sqrt(z - NEG_INV_E)),
            [
                -9.1377731417581546262,
                -1644.7244791508889407,
                -28105.096098779681470,
                3896.0798103909213915,
            ],
            [
                1.0,
                272.37526135123973261,
                7929.2242612913497363,
                23980.122860821312510,
            ],
        )
    } else if z <= -0.0054800129452094435733 {
        // W >= -7.178, Y_-4

        rational_function(
            -z / (INV_SQRT_E + sqrt(z - NEG_INV_E)),
            [
                -10.603388239566372960,
                -7733.3485214986476193,
                -575482.40707964422174,
                -2.1545526041889783132e6,
            ],
            [
                1.0,
                1021.7938566066817287,
                111300.22915486520918,
                1.2614256400088442186e6,
            ],
        )
    } else if z <= -0.0013674669892508042687 {
        // W >= -8.766, Y_-5

        rational_function(
            -z / (INV_SQRT_E + sqrt(z - NEG_INV_E)),
            [
                -12.108699273343437997,
                -36896.535108166377289,
                -1.1831126720106053574e7,
                -2.7565830813940924286e8,
            ],
            [
                1.0,
                4044.9753064880700697,
                1.7418277619030004713e6,
                7.8436907380806897280e7,
            ],
        )
    } else if z <= -0.00032614226731072565915 {
        // W >= -10.367, Y_-6

        rational_function(
            -z / (INV_SQRT_E + sqrt(z - NEG_INV_E)),
            [
                -13.646761936746191398,
                -179086.11585715148553,
                -2.5084634935214641020e8,
                -2.9343700494833715019e10,
            ],
            [
                1.0,
                16743.826607737142476,
                2.9809650946011743047e7,
                5.5739514816958001202e9,
            ],
        )
    } else if z <= -0.000074906612036101435088 {
        // W >= -11.983, Y_-7

        rational_function(
            -z / (INV_SQRT_E + sqrt(z - NEG_INV_E)),
            [
                -15.212958142001646273,
                -884954.68798168953807,
                -5.5298154378633475379e9,
                -3.0934187435314668203e12,
            ],
            [
                1.0,
                72009.255525210120244,
                5.5059007671875803470e8,
                4.4324894867000340495e11,
            ],
        )
    } else if z <= -1.0962444526410993919e-19 {
        // W >= -47.518, V_-8

        rational_function(
            ln(-z),
            [
                -0.032401163177791086145,
                2.0281942144742502667,
                -0.52752431242592713992,
                0.017340294772717582230,
            ],
            [
                1.0,
                -0.45004274443891737296,
                0.017154705753566296216,
                -5.2438196202718358226e-7,
            ],
        )
    } else if z < 0.0 {
        // W >= -317.993, V_-9

        rational_function(
            ln(-z),
            [
                -1.4411246595812098029,
                1.2819269639980478095,
                -0.074979356113812324952,
                0.00047636309162069150655,
            ],
            [
                1.0,
                -0.072000873723868650424,
                0.00047548932989597029952,
                -4.1714979247546840619e-10,
            ],
        )
    } else {
        f32::NAN
    }
}
